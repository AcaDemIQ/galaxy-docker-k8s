# vim:set ft=dockerfile:
# Image-3: 
# - Rerun playbook using base w/prebuilt galaxy (avoids rerunning lengthy tasks)
# - Remove build artifacts and other files not needed in container

#TODO: change to final image name (img2:final >> galaxy-build:stage2)
FROM img2:final AS builder
ARG DEBIAN_FRONTEND=noninteractive

#TODO: this should be passed on command line
ARG SERVER_DIR=/galaxy/server

WORKDIR /tmp/ansible
# remove context left over from previous build
RUN rm -rf *
# copy current context
COPY . .

# Rerun playbook
RUN ansible-playbook -i localhost, playbook.yml

# Remove iunnecessary files
WORKDIR $SERVER_DIR
RUN rm -rf \
        .ci \
        .git \
        .venv/bin/node \
        .venv/include/node \
        .venv/lib/node_modules \
        .venv/src/node* \
        client/node_modules \
        doc \
        test \
        test-data

#TODO: change to final image name (img1:final >> galaxy-build:stage1)
FROM img1:final
ARG DEBIAN_FRONTEND=noninteractive

#TODO: this should be passed on command line
# NOTE: the value of GALAXY_USER must be also hardcoded in the COPY instruction below
#TODO remove duplication (see above)
ARG ROOT_DIR=/galaxy
ARG SERVER_DIR=$ROOT_DIR/server
ARG GALAXY_USER=galaxy

# Create Galaxy user+group; mkdir 
RUN set -xe; \
      adduser --system --group $GALAXY_USER \
      && mkdir -p $SERVER_DIR \
      && chown $GALAXY_USER:$GALAXY_USER $ROOT_DIR -R

WORKDIR $ROOT_DIR
# Copy galaxy files to final image
# The chown value MUST be hardcoded (see #35018 at github.com/moby/moby)
COPY --chown=galaxy:galaxy --from=builder $ROOT_DIR .

WORKDIR $SERVER_DIR
EXPOSE 8080
USER $GALAXY_USER
ENV PATH="$SERVER_DIR/.venv/bin:${PATH}"

# and run it!
#CMD . .venv/bin/activate && uwsgi --yaml config/galaxy.yml
